apiVersion: v1
kind: ConfigMap
metadata:
  name: vpa-nap-coordinator
  namespace: kube-system
data:
  coordinator.go: |
    // VPA-NAP Coordinator Controller
    // Prevents scaling conflicts between VPA and NAP
    
    package main
    
    import (
        "context"
        "time"
    )
    
    type CoordinatorConfig struct {
        // Conflict detection thresholds
        NodeChurnThreshold    int           `yaml:"nodeChurnThreshold"`    // Max nodes/hour
        PodEvictionThreshold  int           `yaml:"podEvictionThreshold"`  // Max evictions/hour
        ResourceOscillation   float64       `yaml:"resourceOscillation"`   // Max % change
        
        // Coordination delays
        VPAUpdateDelay        time.Duration `yaml:"vpaUpdateDelay"`        // Delay VPA after NAP
        NAPActionDelay        time.Duration `yaml:"napActionDelay"`        // Delay NAP after VPA
        
        // Safety mechanisms
        EmergencyStop         bool          `yaml:"emergencyStop"`         // Kill switch
        DryRun               bool          `yaml:"dryRun"`                // Test mode
    }
    
    func (c *CoordinatorConfig) DetectConflict() ConflictType {
        // Implement conflict detection logic
        // Monitor both VPA and NAP decisions
        // Return conflict type if detected
    }
    
    func (c *CoordinatorConfig) MitigateConflict(conflict ConflictType) {
        switch conflict {
        case OscillationConflict:
            // Pause VPA updates for cooldown period
            // Notify platform team
        case EvictionStorm:
            // Block NAP consolidation
            // Gradually resume after stability
        case ResourceInflation:
            // Apply resource caps
            // Adjust VPA recommendations
        }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vpa-nap-coordinator
  namespace: kube-system
spec:
  replicas: 1  # Single instance to avoid conflicts
  selector:
    matchLabels:
      app: vpa-nap-coordinator
  template:
    metadata:
      labels:
        app: vpa-nap-coordinator
    spec:
      serviceAccountName: vpa-nap-coordinator
      containers:
      - name: coordinator
        # NOTE: Using alternative implementation in vpa-nap-coordinator-alternative.yaml
        # This provides the same functionality without requiring a custom controller
        image: bitnami/kubectl:latest
        command: ["/bin/bash"]
        args: ["-c", "echo 'Use vpa-nap-coordinator-alternative.yaml for production deployment'; sleep infinity"]
        env:
        - name: COORDINATION_MODE
          value: "active"  # active|passive|observe
        - name: CONFLICT_THRESHOLD
          value: "3"  # Conflicts before intervention
        - name: COOLDOWN_PERIOD
          value: "900"  # 15 minutes in seconds
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "500m"
            memory: "512Mi"
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: vpa-nap-coordinator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: vpa-nap-coordinator
rules:
- apiGroups: ["autoscaling.k8s.io"]
  resources: ["verticalpodautoscalers", "verticalpodautoscalercheckpoints"]
  verbs: ["get", "list", "watch", "update", "patch"]
- apiGroups: [""]
  resources: ["nodes", "pods", "events"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments", "replicasets"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["metrics.k8s.io"]
  resources: ["nodes", "pods"]
  verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: vpa-nap-coordinator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: vpa-nap-coordinator
subjects:
- kind: ServiceAccount
  name: vpa-nap-coordinator
  namespace: kube-system