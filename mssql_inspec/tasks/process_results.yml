---
- name: Set result file names (matching original script pattern)
  set_fact:
    control_file_name: "{{ control_files.files[idx].path | basename | regex_replace('\\.rb$', '') }}"
    timestamp: "{{ ansible_date_time.epoch }}"
    process_id: "{{ ansible_process_id | default(ansible_date_time.epoch) }}"
    platform: "MSSQL"

- name: Set result file name
  set_fact:
    result_file_name: "{{ platform }}_NIST_{{ process_id }}_{{ mssql_server }}_{{ mssql_database }}_{{ mssql_version }}_{{ timestamp }}_{{ control_file_name }}"

- name: Parse InSpec result status (matching original script logic)
  set_fact:
    # Extract status using similar logic to original: awk -F\" '/status/ {print $2}' | awk -F: '{print $1}' | sed 's/[",]//g'
    inspec_status: "{{ (item.stdout | regex_search('\"status\":\"([^\"]+)\"', '\1')) | default('unknown') }}"
  ignore_errors: true

- name: Handle successful InSpec execution (matching original script)
  block:
    - name: Save successful results to JSON file (rename from .out to .json like original)
      copy:
        content: "{{ item.stdout }}"
        dest: "{{ inspec_results_dir }}/{{ result_file_name }}.json"
      delegate_to: "{{ inspec_delegate_host }}"
      when: inspec_status is defined and inspec_status in ['passed', 'failed', 'skipped']

    - name: Log successful execution
      debug:
        msg: "Control {{ control_file_name }} completed with status: {{ inspec_status }}"
      when: inspec_debug_mode | default(false)

- name: Handle failed InSpec execution (exact JSON format from original script)
  block:
    - name: Create error report matching original script format
      copy:
        content: |
          {"controls":[{"timestamp":"","hostname":"{{ mssql_server }}","database":"{{ mssql_database }}","port":"{{ mssql_port }}","DBVersion":"{{ mssql_version }}","id":"Cannot connect to database. One or more parameters such as Platform, Host Name, Database Name, Service Name, Port Number, Database Version may be incorrect.","profile_id":"N/A","profile_sha256":"N/A","status":"Unreachable","code_desc":"Cannot connect","statistics":{"duration":0},"version":"N/A"}]}
        dest: "{{ inspec_results_dir }}/{{ result_file_name }}.json"
      delegate_to: "{{ inspec_delegate_host }}"
      when:
        - item.rc != 0 or (inspec_status is not defined or inspec_status not in ['passed', 'failed', 'skipped'])

    - name: Log connection error
      debug:
        msg: |
          Control {{ control_file_name }} failed to execute.
          Error: {{ item.stderr | default('Unknown error') }}
          Result file: {{ result_file_name }}.json
      when:
        - inspec_debug_mode | default(false)
        - (item.rc != 0 or (inspec_status is not defined or inspec_status not in ['passed', 'failed', 'skipped']))
